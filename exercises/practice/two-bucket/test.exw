include two-bucket.e

constant tests = {
    {3, 5,1,"one",{"one",4,5,""},"Measure using bucket one of size 3 and bucket two of size 5 - start with bucket one"},
    {3, 5,1,"two",{"two",8,3,""},"Measure using bucket one of size 3 and bucket two of size 5 - start with bucket two"},
    {7,11,2,"one",{"one",14,11,""},"Measure using bucket one of size 7 and bucket two of size 11 - start with bucket one"},
    {7,11,2,"two",{"two",18,7,""},"Measure using bucket one of size 7 and bucket two of size 11 - start with bucket two"},
    {1, 3,3,"two",{"two",1,0,""},"Measure one step using bucket one of size 1 and bucket two of size 3 - start with bucket two"},
    {2, 3,3,"one",{"two",2,2,""},"Measure using bucket one of size 2 and bucket two of size 3 - start with bucket one and end with bucket two"},
    {6,15,5,"one",{"",0,0,"impossible"},"Not possible to reach the goal"},
    {6,15,9,"one",{"two",10,0,""},"With the same buckets but a different goal, then it is possible"},
    {5, 7,8,"one",{"",0,0,"impossible"},"Goal larger than both buckets is impossible"},
    {2, 4,1,"two",{"",0,0,"impossible"},"No solution case 1"},
    {3, 6,1,"one",{"",0,0,"impossible"},"No solution case 2"}}

set_test_verbosity(TEST_SHOW_ALL)
for t in tests do
    integer {b1,b2,g} = t
    test_equal(solve(b1,b2,g,t[4]),t[5],t[6])
end for
test_summary()

