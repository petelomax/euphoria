include prime-factors.e

--<do not edit>
constant canonical_data = {
{1,{},"no factors"},
{2,{2},"prime number"},
{3,{3},"another prime number"},
{9,{3,3},"square of a prime"},
{4,{2,2},"product of first prime"},
{8,{2,2,2},"cube of a prime"},
{27,{3,3,3},"product of second prime"},
{625,{5,5,5,5},"product of third prime"},
{6,{2,3},"product of first and second prime"},
{12,{2,2,3},"product of primes and non-primes"},
{901255,{5,17,23,461},"product of primes"},
{93819012551,{11,9539,894119},"factors include a large prime"},
}
--</do not edit>

set_test_verbosity(TEST_SHOW_ALL)
for t in canonical_data do
    {atom n, sequence expected, string desc} = t
    test_equal(get_factors(n),expected,desc)
end for
test_summary()

