include triangle.e

--<do not edit>
--ignore canonical_data.e
--</do not edit>

set_test_verbosity(TEST_SHOW_ALL)

test_true(is_equilateral({2,2,2}), "all sides are equal")
test_false(is_equilateral({2,3,2}), "any side is unequal")
test_false(is_equilateral({5,4,6}), "no sides are equal")
test_false(is_equilateral({0,0,0}), "all zero sides is not a triangle")
test_true(is_equilateral({0.5,0.5,0.5}), "sides may be floats")
test_true(is_isosceles({3,4,4}), "last two sides are equal")
test_true(is_isosceles({4,4,3}), "first two sides are equal")
test_true(is_isosceles({4,3,4}), "first and last sides are equal")
test_true(is_isosceles({4,4,4}), "equilateral triangles are also isosceles")
test_false(is_isosceles({2,3,4}), "no sides are equal")
test_false(is_isosceles({1,1,3}), "first triangle inequality violation")
test_false(is_isosceles({1,3,1}), "second triangle inequality violation")
test_false(is_isosceles({3,1,1}), "third triangle inequality violation")
test_true(is_isosceles({0.5,0.4,0.5}), "sides may be floats")
test_true(is_scalene({5,4,6}), "no sides are equal")
test_false(is_scalene({4,4,4}), "all sides are equal")
test_false(is_scalene({4,4,3}), "first and second sides are equal")
test_false(is_scalene({3,4,3}), "first and third sides are equal")
test_false(is_scalene({4,3,3}), "second and third sides are equal")
test_false(is_scalene({7,3,2}), "may not violate triangle inequality")
test_true(is_scalene({0.5,0.4,0.6}), "sides may be floats")

test_summary()
