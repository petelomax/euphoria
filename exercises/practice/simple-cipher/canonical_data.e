-- created automatically by the test generator and brutally overwritten on a regular basis.
-- To permanently mark a test as ignoring all of this copy the following into test.exw:
--<do not edit>
--ignore canonical_data.e
--</do not edit>
-- Otherwise copy/paste this lot (rather than include, so it can verify up-to-date-ness):
--  **NB** If this begins {-1,{`exercise`,`<slug_name>`, then it's still raw json, and the
--          test generator needs updating to munge it, or you can just ignore it as above.
--<do not edit>
constant canonical_data = {
{-1,
 {`exercise`, `simple-cipher`},
 {`comments`,
  {-2,
   `Some of the strings used in this file are symbolic and do not represent their literal value. They are:`,
   `cipher.key - Represents the Cipher key`,
   `cipher.encode - Represents the output of the Cipher encode method`,
   `new - Represents the Cipher initialization`,
   `string.substring(start, length) - Represents a substring of 'string' that begins at index 'start' and is 'length' characters long`}},
 {`cases`,
  {-2,
   {-1, {`description`, `Random key cipher`},
    {`cases`,
     {-2,
      {-1, {`uuid`, `b8bdfbe1-bea3-41bb-a999-b41403f2b15d`},
       {`description`, `Can encode`}, {`scenarios`, {-2, `random`}},
       {`property`, `encode`}, {`input`, {-1, {`plaintext`, `aaaaaaaaaa`}}},
       {`expected`, `cipher.key.substring(0, plaintext.length)`}},
      {-1, {`uuid`, `3dff7f36-75db-46b4-ab70-644b3f38b81c`},
       {`description`, `Can decode`}, {`scenarios`, {-2, `random`}},
       {`property`, `decode`},
       {`input`,
        {-1, {`ciphertext`, `cipher.key.substring(0, expected.length)`}}},
       {`expected`, `aaaaaaaaaa`}},
      {-1, {`uuid`, `8143c684-6df6-46ba-bd1f-dea8fcb5d265`},
       {`description`,
        `Is reversible. I.e., if you apply decode in a encoded result, you must see the same plaintext encode parameter as a result of the decode method`},
       {`scenarios`, {-2, `random`}}, {`property`, `decode`},
       {`input`,
        {-1, {`plaintext`, `abcdefghij`}, {`ciphertext`, `cipher.encode`}}},
       {`expected`, `abcdefghij`}},
      {-1, {`uuid`, `defc0050-e87d-4840-85e4-51a1ab9dd6aa`},
       {`description`, `Key is made only of lowercase letters`},
       {`scenarios`, {-2, `random`}}, {`property`, `key`}, {`input`, {-1}},
       {`expected`, {-1, {`match`, `^[a-z]+$`}}}}}}},
   {-1, {`description`, `Substitution cipher`},
    {`cases`,
     {-2,
      {-1, {`uuid`, `565e5158-5b3b-41dd-b99d-33b9f413c39f`},
       {`description`, `Can encode`}, {`property`, `encode`},
       {`input`, {-1, {`key`, `abcdefghij`}, {`plaintext`, `aaaaaaaaaa`}}},
       {`expected`, `abcdefghij`}},
      {-1, {`uuid`, `d44e4f6a-b8af-4e90-9d08-fd407e31e67b`},
       {`description`, `Can decode`}, {`property`, `decode`},
       {`input`, {-1, {`key`, `abcdefghij`}, {`ciphertext`, `abcdefghij`}}},
       {`expected`, `aaaaaaaaaa`}},
      {-1, {`uuid`, `70a16473-7339-43df-902d-93408c69e9d1`},
       {`description`,
        `Is reversible. I.e., if you apply decode in a encoded result, you must see the same plaintext encode parameter as a result of the decode method`},
       {`property`, `decode`},
       {`input`,
        {-1, {`key`, `abcdefghij`}, {`plaintext`, `abcdefghij`},
         {`ciphertext`, `cipher.encode`}}}, {`expected`, `abcdefghij`}},
      {-1, {`uuid`, `69a1458b-92a6-433a-a02d-7beac3ea91f9`},
       {`description`, `Can double shift encode`}, {`property`, `encode`},
       {`input`,
        {-1, {`key`, `iamapandabear`}, {`plaintext`, `iamapandabear`}}},
       {`expected`, `qayaeaagaciai`}},
      {-1, {`uuid`, `21d207c1-98de-40aa-994f-86197ae230fb`},
       {`description`, `Can wrap on encode`}, {`property`, `encode`},
       {`input`, {-1, {`key`, `abcdefghij`}, {`plaintext`, `zzzzzzzzzz`}}},
       {`expected`, `zabcdefghi`}},
      {-1, {`uuid`, `a3d7a4d7-24a9-4de6-bdc4-a6614ced0cb3`},
       {`description`, `Can wrap on decode`}, {`property`, `decode`},
       {`input`, {-1, {`key`, `abcdefghij`}, {`ciphertext`, `zabcdefghi`}}},
       {`expected`, `zzzzzzzzzz`}},
      {-1, {`uuid`, `e31c9b8c-8eb6-45c9-a4b5-8344a36b9641`},
       {`description`, `Can encode messages longer than the key`},
       {`property`, `encode`},
       {`input`, {-1, {`key`, `abc`}, {`plaintext`, `iamapandabear`}}},
       {`expected`, `iboaqcnecbfcr`}},
      {-1, {`uuid`, `93cfaae0-17da-4627-9a04-d6d1e1be52e3`},
       {`description`, `Can decode messages longer than the key`},
       {`property`, `decode`},
       {`input`, {-1, {`key`, `abc`}, {`ciphertext`, `iboaqcnecbfcr`}}},
       {`expected`, `iamapandabear`}}}}}}}}
}
--</do not edit>

