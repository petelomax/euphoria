-- created automatically by the test generator and brutally overwritten on a regular basis.
-- To permanently mark a test as ignoring all of this copy the following into test.exw:
--<do not edit>
--ignore canonical_data.e
--</do not edit>
-- Otherwise copy/paste this lot (rather than include, so it can verify up-to-date-ness):
--  **NB** If this begins {-1,{`exercise`,`<slug_name>`, then it's still raw json, and the
--          test generator needs updating to munge it, or you can just ignore it as above.
--<do not edit>
constant canonical_data = {
{-1,
 {`exercise`, `word-count`},
 {`comments`,
  {-2,
   `For each word in the input, count the number of times it appears in the`,
   `entire sentence.`}},
 {`cases`,
  {-2,
   {-1, {`uuid`, `61559d5f-2cad-48fb-af53-d3973a9ee9ef`},
    {`description`, `count one word`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `word`}}}, {`expected`, {-1, {`word`, 1}}}},
   {-1, {`uuid`, `5abd53a3-1aed-43a4-a15a-29f88c09cbbd`},
    {`description`, `count one of each word`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `one of each`}}},
    {`expected`, {-1, {`one`, 1}, {`of`, 1}, {`each`, 1}}}},
   {-1, {`uuid`, `2a3091e5-952e-4099-9fac-8f85d9655c0e`},
    {`description`, `multiple occurrences of a word`},
    {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `one fish two fish red fish blue fish`}}},
    {`expected`,
     {-1, {`one`, 1}, {`fish`, 4}, {`two`, 1}, {`red`, 1}, {`blue`, 1}}}},
   {-1, {`uuid`, `e81877ae-d4da-4af4-931c-d923cd621ca6`},
    {`description`, `handles cramped lists`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `one,two,three`}}},
    {`expected`, {-1, {`one`, 1}, {`two`, 1}, {`three`, 1}}}},
   {-1, {`uuid`, `7349f682-9707-47c0-a9af-be56e1e7ff30`},
    {`description`, `handles expanded lists`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, "one,\ntwo,\nthree"}}},
    {`expected`, {-1, {`one`, 1}, {`two`, 1}, {`three`, 1}}}},
   {-1, {`uuid`, `a514a0f2-8589-4279-8892-887f76a14c82`},
    {`description`, `ignore punctuation`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `car: carpet as java: javascript!!&@$%^&`}}},
    {`expected`,
     {-1, {`car`, 1}, {`carpet`, 1}, {`as`, 1}, {`java`, 1},
      {`javascript`, 1}}}},
   {-1, {`uuid`, `d2e5cee6-d2ec-497b-bdc9-3ebe092ce55e`},
    {`description`, `include numbers`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `testing, 1, 2 testing`}}},
    {`expected`, {-1, {`testing`, 2}, {`1`, 1}, {`2`, 1}}}},
   {-1, {`uuid`, `dac6bc6a-21ae-4954-945d-d7f716392dbf`},
    {`description`, `normalize case`}, {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `go Go GO Stop stop`}}},
    {`expected`, {-1, {`go`, 3}, {`stop`, 2}}}},
   {-1, {`uuid`, `4ff6c7d7-fcfc-43ef-b8e7-34ff1837a2d3`},
    {`description`, `with apostrophes`},
    {`comments`,
     {-2, `Added a word with multiple letters after apostrophe`}},
    {`property`, `countWords`},
    {`input`,
     {-1,
      {`sentence`,
       `'First: don't laugh. Then: don't cry. You're getting it.'`}}},
    {`expected`,
     {-1, {`first`, 1}, {`don't`, 2}, {`laugh`, 1}, {`then`, 1}, {`cry`, 1},
      {`you're`, 1}, {`getting`, 1}, {`it`, 1}}}},
   {-1, {`uuid`, `be72af2b-8afe-4337-b151-b297202e4a7b`},
    {`description`, `with quotations`}, {`property`, `countWords`},
    {`input`,
     {-1, {`sentence`, `Joe can't tell between 'large' and large.`}}},
    {`expected`,
     {-1, {`joe`, 1}, {`can't`, 1}, {`tell`, 1}, {`between`, 1},
      {`large`, 2}, {`and`, 1}}}},
   {-1, {`uuid`, `8d6815fe-8a51-4a65-96f9-2fb3f6dc6ed6`},
    {`description`, `substrings from the beginning`},
    {`property`, `countWords`},
    {`input`,
     {-1, {`sentence`, `Joe can't tell between app, apple and a.`}}},
    {`expected`,
     {-1, {`joe`, 1}, {`can't`, 1}, {`tell`, 1}, {`between`, 1}, {`app`, 1},
      {`apple`, 1}, {`and`, 1}, {`a`, 1}}}},
   {-1, {`uuid`, `c5f4ef26-f3f7-4725-b314-855c04fb4c13`},
    {`description`, `multiple spaces not detected as a word`},
    {`property`, `countWords`},
    {`input`, {-1, {`sentence`, ` multiple   whitespaces`}}},
    {`expected`, {-1, {`multiple`, 1}, {`whitespaces`, 1}}}},
   {-1, {`uuid`, `50176e8a-fe8e-4f4c-b6b6-aa9cf8f20360`},
    {`description`, `alternating word separators not detected as a word`},
    {`property`, `countWords`},
    {`input`, {-1, {`sentence`, ",\n,one,\n ,two \n \'three\'"}}},
    {`expected`, {-1, {`one`, 1}, {`two`, 1}, {`three`, 1}}}},
   {-1, {`uuid`, `6d00f1db-901c-4bec-9829-d20eb3044557`},
    {`description`, `quotation for word with apostrophe`},
    {`property`, `countWords`},
    {`input`, {-1, {`sentence`, `can, can't, 'can't'`}}},
    {`expected`, {-1, {`can`, 1}, {`can't`, 2}}}}}}}
}
--</do not edit>

