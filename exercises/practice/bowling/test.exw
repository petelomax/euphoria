include bowling.e

--<do not edit>
--ignore canonical_data.e
--</do not edit>

constant roll_tests = {
    {{},-1,"invalid","rolls cannot score negative points"},
    {{},11,"exceeds pins","a roll cannot score more than 10 points"},
    {{5},6,"exceeds pins","two rolls in a frame cannot score more than 10 points"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10},11,"exceeds pins",
     "bonus roll after a strike in the last frame cannot score more than 10 points"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,5},6,"exceeds pins",
     "two bonus rolls after a strike in the last frame cannot score more than 10 points"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,6},10,"exceeds pins",
     "the second bonus rolls after a strike in the last frame cannot be a strike if the first one is not a strike"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10},11,"exceeds pins",
     "second bonus roll after a strike in the last frame cannot score more than 10 points"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},0,"game over","cannot roll if game already has ten frames"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,2},2,"game over","cannot roll after bonus roll for spare"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,3,2},2,"game over","cannot roll after bonus rolls for strike"},
}

constant score_tests = {
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},0,"should be able to score a game with all zeros"},
    {{3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6},90,"should be able to score a game with no strikes or spares"},
    {{6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},10,"a spare followed by zeros is worth ten points"},
    {{6,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},16,"points scored in the roll after a spare are counted twice"},
    {{5,5,3,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},31,"consecutive spares each get a one roll bonus"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,7},17,"a spare in the last frame gets a one roll bonus that is counted once"},
    {{10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},10,"a strike earns ten points in a frame with a single roll"},
    {{10,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},26,"points scored in the two rolls after a strike are counted twice as a bonus"},
    {{10,10,10,5,3,0,0,0,0,0,0,0,0,0,0,0,0},81,"consecutive strikes each get the two roll bonus"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,7,1},18,"a strike in the last frame gets a two roll bonus that is counted once"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,7,3},20,"rolling a spare with the two roll bonus does not get a bonus roll"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10},30,"strikes with the two roll bonus do not get bonus rolls"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,1},31,"last two strikes followed by only last bonus with non strike points"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,10},20,"a strike with the one roll bonus after a spare in the last frame does not get a bonus"},
    {{10,10,10,10,10,10,10,10,10,10,10,10},300,"all strikes is a perfect game"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,6},26,"two bonus rolls after a strike in the last frame can score more than 10 points if one is a strike"},
    {{},{0,"game not over"},"an unstarted game cannot be scored"},
    {{1,2},{3,"game not over"},"an incomplete game cannot be scored"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10},{0,"game not over"},"bonus rolls for a strike in the last frame must be rolled before score can be calculated"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10},{0,"game not over"},"both bonus rolls for a strike in the last frame must be rolled before score can be calculated"},
    {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10},{30,"game not over"},"both bonus rolls for a strike in the last frame must be rolled before score can be calculated"},
    {{1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,7,3},{105,"game not over"},"bonus roll for a spare in the last frame must be rolled before score can be calculated"},
}

set_test_verbosity(TEST_SHOW_ALL)

function roll_previous(sequence p)
    for r in p do
        object res = roll(r)
        if res!=true then
            test_equal(res,true,"unexpected error applying previous (valid) rolls")
            return false
        end if
    end for
    return true
end function

for i,t in roll_tests do
    new_game()
    if roll_previous(t[1]) then
        test_equal(roll(t[2]),t[3],t[4])
    end if
end for
for t in score_tests do
    new_game()
    if roll_previous(t[1]) then
        test_equal(score(),t[2],t[3])
    end if
end for
test_summary()

