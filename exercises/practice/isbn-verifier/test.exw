include isbn-verifier.e

--<do not edit>
constant canonical_data = {
{"3-598-21508-8",true,"valid isbn"},
{"3-598-21508-9",false,"invalid isbn check digit"},
{"3-598-21507-X",true,"valid isbn with a check digit of 10"},
{"3-598-21507-A",false,"check digit is a character other than X"},
{"4-598-21507-B",false,"invalid check digit in isbn is not treated as zero"},
{"3-598-P1581-X",false,"invalid character in isbn is not treated as zero"},
{"3-598-2X507-9",false,"X is only valid as a check digit"},
{"3598215088",true,"valid isbn without separating dashes"},
{"359821507X",true,"isbn without separating dashes and X as check digit"},
{"359821507",false,"isbn without check digit and dashes"},
{"3598215078X",false,"too long isbn and no dashes"},
{"00",false,"too short isbn"},
{"3-598-21507",false,"isbn without check digit"},
{"3-598-21515-X",false,"check digit of X should not be used for 0"},
{"",false,"empty isbn"},
{"134456729",false,"input is 9 characters"},
{"3132P34035",false,"invalid characters are not ignored after checking length"},
{"3598P215088",false,"invalid characters are not ignored before checking length"},
{"98245726788",false,"input is too long but contains a valid isbn"},
}
--</do not edit>

set_test_verbosity(TEST_SHOW_ALL)
for t in canonical_data do
    {string isbn, bool expected, string desc} = t
    test_equal(is_valid(isbn),expected,desc)
end for
test_summary() 
