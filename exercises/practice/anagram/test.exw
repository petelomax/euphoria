include anagram.e 

set_test_verbosity(TEST_SHOW_ALL)
test_equal(find_anagrams("diaper",{"hello","world","zombies","pants"}), {}, "no matches")
test_equal(find_anagrams("master",{"stream","pigeon","maters"}), {"maters","stream"}, "detects two anagrams")
test_equal(find_anagrams("solemn",{"lemons","cherry","melons"}), {"lemons","melons"}, "detects two anagrams")
test_equal(find_anagrams("good",{"dog","goody"}), {}, "does not detect anagram subsets")
test_equal(find_anagrams("listen",{"enlists","google","inlets","banana"}), {"inlets"}, "detects anagram")
test_equal(find_anagrams("allergy",{"gallery","ballerina","regally","clergy","largely","leading"}), {"gallery","largely","regally"}, "detects three anagrams")
test_equal(find_anagrams("nose",{"Eons","ONES"}), {"Eons","ONES"}, "detects multiple anagrams with different case")
test_equal(find_anagrams("mass",{"last"}), {}, "does not detect non-anagrams with identical checksum")
test_equal(find_anagrams("Orchestra",{"cashregister","Carthorse","radishes"}), {"Carthorse"}, "detects anagrams case-insensitively")
test_equal(find_anagrams("Orchestra",{"cashregister","carthorse","radishes"}), {"carthorse"}, "detects anagrams using case-insensitive subject")
test_equal(find_anagrams("orchestra",{"cashregister","Carthorse","radishes"}), {"Carthorse"}, "detects anagrams using case-insensitive possible matches")
test_equal(find_anagrams("go",{"go Go GO"}), {}, "does not detect an anagram if the original word is repeated")
test_equal(find_anagrams("tapper",{"patter"}), {}, "anagrams must use all letters exactly once")
test_equal(find_anagrams("BANANA",{"BANANA","Banana","banana"}), {}, "words are not anagrams of themselves (case-insensitive)")
test_equal(find_anagrams("BANANA",{"BANANA"}), {}, "words are not anagrams of themselves")
test_equal(find_anagrams("BANANA",{"Banana"}), {}, "words are not anagrams of themselves even if letter case is partially different")
test_equal(find_anagrams("BANANA",{"banana"}), {}, "words are not anagrams of themselves even if letter case is completely different")
test_equal(find_anagrams("LISTEN",{"Listen","Silent","LISTEN"}), {"Silent"}, "words other than themselves can be anagrams")
test_equal(find_anagrams("LISTEN",{"LISTEN","Silent"}), {"Silent"}, "words other than themselves can be anagrams")

test_summary() 
