-- created automatically by the test generator and brutally overwritten on a regular basis.
-- To permanently mark a test as ignoring all of this copy the following into test.exw:
--<do not edit>
--ignore canonical_data.e
--</do not edit>
-- Otherwise copy/paste this lot (rather than include, so it can verify up-to-date-ness):
--  **NB** If this begins {-1,{`exercise`,`<slug_name>`, then it's still raw json, and the
--          test generator needs updating to munge it, or you can just ignore it as above.
--<do not edit>
constant canonical_data = {
{-1,
 {`exercise`, `circular-buffer`},
 {`comments`,
  {-2, `In general, these circular buffers are expected to be stateful,`,
   `and each language will operate on them differently.`,
   `Tests tend to perform a series of operations, some of which expect a certain result.`,
   `As such, this common test suite can only say in abstract terms what should be done.`,
   ``,
   "Tests will contain a number of operations. The operation will be specified in the `operation` key.",
   `Based on the operation, other keys may be present.`,
   "read: Reading from the buffer should succeed if and only if `should_succeed` is true.",
   "  If it should succeed, it should produce the item at `expected`. ",
   "  If it should fail, `expected` will not be present. ",
   "write: Writing the item located at `item` should succeed if and only if `should_succeed` is true.",
   "overwrite: Write the item located at `item` into the buffer, replacing the oldest item if necessary.",
   `clear: Clear the buffer.`, ``,
   "Failure of either `read` or `write` may be indicated in a manner appropriate for your language:",
   `Raising an exception, returning (int, error), returning Option<int>, etc.`,
   ``, `Finally, note that all values are integers.`,
   `If your language contains generics, you may consider allowing buffers to contain other types.`,
   `Tests for that are not included here.`, ``}},
 {`cases`,
  {-2,
   {-1, {`uuid`, `28268ed4-4ff3-45f3-820e-895b44d53dfa`},
    {`description`, `reading empty buffer should fail`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2, {-1, {`operation`, `read`}, {`should_succeed`, {-3, `false`}}}}}}},
    {`expected`, {-1}}},
   {-1, {`uuid`, `2e6db04a-58a1-425d-ade8-ac30b5f318f3`},
    {`description`, `can read an item just written`}, {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `90741fe8-a448-45ce-be2b-de009a24c144`},
    {`description`, `each item may only be read once`}, {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `false`}}}}}}},
    {`expected`, {-1}}},
   {-1, {`uuid`, `be0e62d5-da9c-47a8-b037-5db21827baa7`},
    {`description`, `items are read in the order they are written`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 2},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 2}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `2af22046-3e44-4235-bfe6-05ba60439d38`},
    {`description`, `full buffer can't be written to`}, {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `false`}}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `547d192c-bbf0-4369-b8fa-fc37e71f2393`},
    {`description`, `a read frees up capacity for another write`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 2}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `04a56659-3a81-4113-816b-6ecb659b4471`},
    {`description`,
     `read position is maintained even across multiple writes`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 3},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}},
        {-1, {`operation`, `write`}, {`item`, 3},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 2}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 3}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `60c3a19a-81a7-43d7-bb0a-f07242b1111f`},
    {`description`, `items cleared out of buffer can't be read`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}}, {-1, {`operation`, `clear`}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `false`}}}}}}},
    {`expected`, {-1}}},
   {-1, {`uuid`, `45f3ae89-3470-49f3-b50e-362e4b330a59`},
    {`description`, `clear frees up capacity for another write`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}}, {-1, {`operation`, `clear`}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 2}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `e1ac5170-a026-4725-bfbe-0cf332eddecd`},
    {`description`, `clear does nothing on empty buffer`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 1},
      {`operations`,
       {-2, {-1, {`operation`, `clear`}},
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `9c2d4f26-3ec7-453f-a895-7e7ff8ae7b5b`},
    {`description`, `overwrite acts like write on non-full buffer`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 2},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `overwrite`}, {`item`, 2}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 2}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `880f916b-5039-475c-bd5c-83463c36a147`},
    {`description`, `overwrite replaces the oldest item on full buffer`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 2},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `overwrite`}, {`item`, 3}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 2}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 3}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `bfecab5b-aca1-4fab-a2b0-cd4af2b053c3`},
    {`description`,
     `overwrite replaces the oldest item remaining in buffer following a read`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 3},
      {`operations`,
       {-2,
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 3},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 1}},
        {-1, {`operation`, `write`}, {`item`, 4},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `overwrite`}, {`item`, 5}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 3}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 4}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 5}}}}}}, {`expected`, {-1}}},
   {-1, {`uuid`, `9cebe63a-c405-437b-8b62-e3fdc1ecec5a`},
    {`description`, `initial clear does not affect wrapping around`},
    {`property`, `run`},
    {`input`,
     {-1, {`capacity`, 2},
      {`operations`,
       {-2, {-1, {`operation`, `clear`}},
        {-1, {`operation`, `write`}, {`item`, 1},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `write`}, {`item`, 2},
         {`should_succeed`, {-3, `true`}}},
        {-1, {`operation`, `overwrite`}, {`item`, 3}},
        {-1, {`operation`, `overwrite`}, {`item`, 4}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 3}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `true`}},
         {`expected`, 4}},
        {-1, {`operation`, `read`}, {`should_succeed`, {-3, `false`}}}}}}},
    {`expected`, {-1}}}}}}
}
--</do not edit>

