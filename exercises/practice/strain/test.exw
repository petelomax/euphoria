include strain.e

--<do not edit>
--ignore canonical_data.e
--</do not edit>

set_test_verbosity(TEST_SHOW_ALL)

function always_true(object /*x*/) return true end function
function always_false(object /*x*/) return false end function
function starts_with_z(sequence x) return begins('z',x) end function
function contains_five(sequence x) return find(5,x)!=0 end function

constant az = {"apple","zebra","banana","zombies","cherimoya","zealot"}
constant lists = {{1,2,3},{5,5,5},{5,1,2},{2,1,2},{1,5,2},{2,2,1},{1,2,5}}

test_equal(keep({},always_true), {}, "keep on empty list returns empty list")
test_equal(keep({1,3,5},always_true), {1,3,5}, "keeps everything")
test_equal(keep({1,3,5},always_false), {}, "keeps nothing")
test_equal(keep({1,2,3},odd), {1,3}, "keeps first and last")
test_equal(keep({1,2,3},even), {2}, "keeps neither first nor last")
test_equal(keep(az,starts_with_z), {"zebra","zombies","zealot"}, "keeps z-strings")
test_equal(keep(lists,contains_five), {{5,5,5},{5,1,2},{1,5,2},{1,2,5}}, "keeps 5-lists")
test_equal(discard({},always_true), {}, "discard on empty list returns empty list")
test_equal(discard({1,3,5},always_true), {}, "discards everything")
test_equal(discard({1,3,5},always_false), {1,3,5}, "discards nothing")
test_equal(discard({1,2,3},odd), {2}, "discards first and last")
test_equal(discard({1,2,3},even), {1,3}, "discards neither first nor last")
test_equal(discard(az,starts_with_z), {"apple","banana","cherimoya"}, "discards z-strings")
test_equal(discard(lists,contains_five), {{1,2,3},{2,1,2},{2,2,1}}, "discards 5-lists")
test_summary()

