include flatten-array.e

--<do not edit>
constant canonical_data = {
{{},{},"empty"},
{{0,1,2},{0,1,2},"no nesting"},
{{{{}}},{},"flattens a nested array"},
{{1,{2,3,4,5,6,7},8},{1,2,3,4,5,6,7,8},"flattens array with just integers present"},
{{0,2,{{2,3},8,100,4,{{{50}}}},-2},{0,2,2,3,8,100,4,50,-2},"5 level nesting"},
{{1,{2,{{3}},{4,{{5}}},6,7},8},{1,2,3,4,5,6,7,8},"6 level nesting"},
{{1,2,-1},{1,2},"null values are omitted from the final result"},
{{-1,-1,3},{3},"consecutive null values at the front of the list are omitted from the final result"},
{{1,-1,-1,4},{1,4},"consecutive null values in the middle of the list are omitted from the final result"},
{{0,2,{{2,3},8,{{100}},-1,{{-1}}},-2},{0,2,2,3,8,100,-2},"6 level nest list with null values"},
{{-1,{{{-1}}},-1,-1,{{-1,-1},-1},-1},{},"all values in nested list are null"},
}
--</do not edit>

set_test_verbosity(TEST_SHOW_ALL)
for t in canonical_data do
    sequence {input,expected,desc} = t
    test_equal(flatten_array(input),expected,desc)
end for
test_summary()

